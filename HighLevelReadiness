-- ========= PARAMETERS =========
WITH params AS (
  SELECT
    TO_TIMESTAMP('2025-01-01 00:00:00') AS start_ts,
    TO_TIMESTAMP('2025-08-01 00:00:00') AS end_ts,
    48::INT AS notes_lookback_hours,
    24::INT AS meds_lookback_hours
),

-- ========= DENOMINATOR: ALL VENT EPISODES OVERLAPPING WINDOW =========
vent_episodes AS (
  SELECT
      l.LdaKey,
      l.PatientDurableKey,
      l.InitialEncounterKey AS EncounterKey,
      l.PlacementInstant,
      l.RemovalInstant,
      GREATEST(l.PlacementInstant, p.start_ts) AS exp_start,
      LEAST(COALESCE(l.RemovalInstant, p.end_ts), p.end_ts) AS exp_end
  FROM LdaFact l
  CROSS JOIN params p
  WHERE l.PlacementInstant <= p.end_ts
    AND COALESCE(l.RemovalInstant, p.end_ts) >= p.start_ts
),

-- ========= MASTER FLOWSHEET ROWS (your columns: Name, RowType) =========
flowsheet_row_dim AS (
  SELECT DISTINCT
    frd.FlowsheetRowEpicId,
    UPPER(frd.Name)    AS name,
    UPPER(frd.RowType) AS row_type
  FROM FlowsheetRowDim frd
),

-- ========= WHITELIST ETT/AIRWAY DATA ROWS (name-only + type=DATA) =========
extubation_rows AS (
  SELECT DISTINCT frd.FlowsheetRowEpicId
  FROM flowsheet_row_dim frd
  WHERE frd.row_type = 'DATA'
    AND frd.name ILIKE '%extubat%'   -- e.g., "Extubation Tolerance", "Unplanned Extubation", etc.
),

-- ========= UE EVENTS (TEXT + ROW WHITELIST + TIME PROXIMITY) =========
ue_events AS (
  SELECT DISTINCT
      v.LdaKey,
      fvf.TakenInstant AS EventInstant
  FROM vent_episodes v
  JOIN FlowsheetValueFact fvf
    ON fvf.LdaKey = v.LdaKey
  JOIN extubation_rows er
    ON er.FlowsheetRowEpicId = fvf.FlowsheetRowEpicId
  WHERE
      (
        fvf.Value ILIKE '%unplan%'
        OR (fvf.Value ILIKE '%self%' AND fvf.Value ILIKE '%extubat%')
        OR fvf.Value ILIKE '%accident%extubat%'
      )
      AND fvf.TakenInstant BETWEEN (SELECT start_ts FROM params) AND (SELECT end_ts FROM params)
      AND ABS(DATEDIFF('minute', fvf.TakenInstant, v.RemovalInstant)) <= 120
),

-- ========= EPISODE INDEX (DEFINE EVENT OR CENSOR TIME) =========
episode_index AS (
  SELECT
      v.LdaKey,
      v.PatientDurableKey,
      v.EncounterKey,
      v.PlacementInstant,
      v.RemovalInstant,
      v.exp_start,
      v.exp_end,
      DATEDIFF('hour', v.exp_start, v.exp_end) AS vent_hours_clipped,
      ue.EventInstant,
      COALESCE(ue.EventInstant, v.exp_end) AS ref_time
  FROM vent_episodes v
  LEFT JOIN ue_events ue
    ON ue.LdaKey = v.LdaKey
),

-- ========= PATIENT DEMOGRAPHICS (RACE ROLLUP) =========
patient_info AS (
  SELECT
      p.DurableKey,
      p.PrimaryMrn,
      p.AgeInYears,
      UPPER(TRIM(COALESCE(p.FirstRace, p.SecondRace, p.Race, p.RaceEthnicity))) AS RaceRollup,
      p.Sex
  FROM PatientDim p
  WHERE p.IsCurrent = 1
),

-- ========= NOTES IN 48H PRE-EVENT/CENSOR =========
notes_pre AS (
  SELECT DISTINCT ei.LdaKey
  FROM episode_index ei
  JOIN ClinicalNoteFact cn
    ON cn.EncounterKey = ei.EncounterKey
  CROSS JOIN params prm
  WHERE cn.Type IN (
          'Progress Notes','Case Management','Event Note','Procedure Note','Consults',
          'IPOC','Education','Discharge Summary','Transfer',
          'Admission History and Physical','ED Provider Notes'
        )
    AND cn.ServiceInstant BETWEEN DATEADD(hour, -prm.notes_lookback_hours, ei.ref_time)
                              AND ei.ref_time
),

-- ========= PSYCH MEDS IN 24H PRE-EVENT/CENSOR =========
psych_meds_pre AS (
  SELECT DISTINCT ei.LdaKey
  FROM episode_index ei
  JOIN MedicationAdministrationFact maf
    ON maf.EncounterKey = ei.EncounterKey
  JOIN MedicationDim md
    ON md.MedicationKey = maf.MedicationKey
  CROSS JOIN params prm
  WHERE md.TherapeuticClass = 'PSYCHOTHERAPEUTIC DRUGS'
    AND maf.AdministrationInstant BETWEEN DATEADD(hour, -prm.meds_lookback_hours, ei.ref_time)
                                     AND ei.ref_time
),

-- ========= AGE BANDS =========
epi_with_demo AS (
  SELECT
      ei.*,
      pi.AgeInYears,
      pi.RaceRollup,
      pi.Sex,
      CASE
        WHEN pi.AgeInYears IS NULL THEN 'Unknown'
        WHEN pi.AgeInYears < 1 THEN 'Infant'
        WHEN pi.AgeInYears BETWEEN 1 AND 12 THEN 'Child'
        ELSE 'Adolescent'
      END AS AgeBand
  FROM episode_index ei
  LEFT JOIN patient_info pi
    ON pi.DurableKey = ei.PatientDurableKey
)

-- ========= FINAL READINESS ROLLUP =========
SELECT
  COUNT(DISTINCT e.LdaKey)                                                      AS total_vent_episodes,
  SUM(NULLIF(e.vent_hours_clipped,0))/24.0                                      AS total_vent_days,

  COUNT(DISTINCT CASE WHEN e.EventInstant IS NOT NULL THEN e.LdaKey END)        AS ue_events,
  (COUNT(DISTINCT CASE WHEN e.EventInstant IS NOT NULL THEN e.LdaKey END) * 100.0
      / NULLIF(SUM(NULLIF(e.vent_hours_clipped,0))/24.0, 0))                    AS ue_rate_per_100_days,

  COUNT(DISTINCT CASE WHEN e.EventInstant IS NOT NULL AND e.AgeBand = 'Infant' THEN e.LdaKey END)       AS ue_infants,
  COUNT(DISTINCT CASE WHEN e.EventInstant IS NOT NULL AND e.AgeBand = 'Child' THEN e.LdaKey END)        AS ue_children,
  COUNT(DISTINCT CASE WHEN e.EventInstant IS NOT NULL AND e.AgeBand = 'Adolescent' THEN e.LdaKey END)   AS ue_adolescents,

  COUNT(DISTINCT CASE WHEN e.EventInstant IS NOT NULL AND e.RaceRollup = 'WHITE'    THEN e.LdaKey END)  AS ue_white,
  COUNT(DISTINCT CASE WHEN e.EventInstant IS NOT NULL AND e.RaceRollup = 'BLACK'    THEN e.LdaKey END)  AS ue_black,
  COUNT(DISTINCT CASE WHEN e.EventInstant IS NOT NULL AND e.RaceRollup LIKE '%HISPANIC%' THEN e.LdaKey END) AS ue_hispanic,

  COUNT(DISTINCT CASE WHEN e.EventInstant IS NOT NULL AND e.Sex = 'M' THEN e.LdaKey END)                AS ue_males,
  COUNT(DISTINCT CASE WHEN e.EventInstant IS NOT NULL AND e.Sex = 'F' THEN e.LdaKey END)                AS ue_females,

  COUNT(DISTINCT CASE WHEN n.LdaKey IS NOT NULL THEN e.LdaKey END)              AS episodes_with_notes_48h,
  COUNT(DISTINCT CASE WHEN m.LdaKey IS NOT NULL THEN e.LdaKey END)              AS episodes_with_psych_meds_24h

FROM epi_with_demo e
LEFT JOIN notes_pre n       ON n.LdaKey = e.LdaKey
LEFT JOIN psych_meds_pre m  ON m.LdaKey = e.LdaKey
;
